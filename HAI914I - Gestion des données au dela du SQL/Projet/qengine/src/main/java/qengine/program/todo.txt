Refaire le get de Index pour prendre 3 parametres, gérer le null.
(Dans le cas ou on voudrait resoudre toute les requettes (pas seulement en étoile))
    public ArrayList<Result> get(String s(=null?), String p(=null?), String o(=null?)) {
        ArrayList<Result> ret = new ArrayList<>() ;

        if (s!= null && p != null && o != null) {
            int pVal = Dictonnary.getInstance().encode(p);
            int sVal = Dictonnary.getInstance().encode(s);
            int oVal = Dictonnary.getInstance().encode(o);

            result.add(new Result(pVal, sVal, oVal); return ret;
        }
        Si on en connais 2{
            maps = { pso, spo .... }

            if (s == null) { garder les maps qui finissent par s }
            if (p == null) { garder les maps qui finissent par p }
            if (o == null) { garder les maps qui finissent par o }

            getFromMap(maps[0], a b)
        }

        Si on en connais 1 seul {
            maps = {pso , spo ... }

            if (s == null) { virer les maps qui commencent par s }
            if (p == null) { virer les maps qui commencent par p }
            if (o == null) { virer les maps qui commencent par o }

            list = maps.get(a).allkeys
            getFromMap(maps[0], a, list[i])

        }
        return ret ;
    }



[DONE]
Fonction qui fait l'intersection d'un ensemble de réponses de requettes donné par get (Arraylist Integer / result)



[DONE]
(Faire un objet 'reponse', qui donnerai le tripplet, facilitera la selection. )








select x | * from
{ a b c . x y z }

a = [  -1 r r ]
ab = [ -1 -1 r ]
 { 1 2 3 }

for x = request.split(" ")
    if x equals ?vo
        return x

